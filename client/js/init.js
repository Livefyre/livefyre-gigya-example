(function(root, $, Livefyre, gigya) {
  "use strict";

  /**
   * Let's be explicit and make sure these requirements are satisfied.
   */
  if (!gigya) {
    console.log("MISSING GIGYA - Please ensure that Gigya is properly set up.");
    return;
  }

  if (!Livefyre) {
    console.log("MISSING LIVEFYRE - Please ensure that Livefyre is properly set up");
    return;
  }

  /**
   * The Livefyre.require structure is the main loader for Livefyre
   * It's namespaced and won't conflict with standard require.js implementations
   * Include the pieces of Livefyre you'd like to use; in this example, only
   * fyre.conv (comments, liveblog, and chat) and the auth module are included.
   */
  Livefyre.require(['fyre.conv#3', 'auth'], function(Conv, auth) {

    /**
     * Replace this with your Livefyre-provided network name
     */
    var networkConfig = {
        network: "gigya-0.fyre.co"
    };

    /**
     * The convConfig object contains the details of your collection. Under most normal circumstances,
     * the articleId is generated by your CMS and the collectionMeta and checksum are dynamically created
     */
    var convConfig = {
        "collectionMeta":"eyJ0eXAiOiJqd3QiLCJhbGciOiJIUzI1NiJ9.eyJ0aXRsZSI6IkNvbW1lbnQgVGVzdCIsInVybCI6Imh0dHA6XC9cL2ZhZ2FuLmdpZ3lhLWNzLmNvbVwvbGl2ZWZ5cmVcLyIsInRhZ3MiOiIiLCJjaGVja3N1bSI6IjE0NTU5Yjk4ZGVlODFjYjY0NzE3ZTIwYTU3NzEwMzQwIiwiYXJ0aWNsZUlkIjoiMTIzIn0.l5bm_fv5avLzbBGMj8iO5dPZDoOvyphJjsYPGDcq3IU",
        "checksum":"14559b98dee81cb64717e20a57710340",
        "siteId":"303862",
        "articleId":"123",
        "el":"livefyre-comments"
    };

    /**
     * This instantiates the comments collection
     */
    new Conv(networkConfig, [convConfig],
        function(commentsWidget) {});

    // CONFIGURE GIGYA
    // SCREEN SETS:
    // http://developers.gigya.com/010_Developer_Guide/10_UM360/040_Raas/020_Screen-Sets

    var GIGYA_SETTINGS = {
        screens: {
          loginScreen: 'Login-web',
          profileScreen: 'Profile-web',
        }
    }

    /**
     * This is the Gigya User object
     */
    var USER;

    /**
     * These would be your site's login/logout buttons
     */
    var loginBTN$ = $(".login");
    var logoutBTN$ = $(".logout");


    // User state event handlers
    var onLogin = function (user) {
      USER = user;
      onUserStateChange();
    }

    var onLogout = function() {
      USER = undefined;
      onUserStateChange();
    }

    var onUserStateChange = function() {
      if (USER) {
        // Logged in
        loginLivefyre();

        loginBTN$.hide();
        logoutBTN$.show();

      } else {
        // Logged out

        loginBTN$.show();
        logoutBTN$.hide();
      }
    }

    /**
     * @function loginLivefyre
     * Interacts with a server ajaxically to take the Gigya UID and return
     * a valid Livefyre authorization token.
     */
   var loginLivefyre = function(promise) {
      if(!$.cookie(LIVEFYRE_COOKIE_NAME)) {
        // Only if not already logged into Livefyre
        // With valid user signature, returns LiveFyre token and sets cookie

        $.ajax({
          url: "server/ajax/token-endpoint.php",
          data: {
            UID: USER.UID,
            UIDSignature: USER.UIDSignature,
            signatureTimestamp: USER.signatureTimestamp
          },
          type: "POST",
          dataType: "json",
          cache: false

        }).done(function (response) {
          $.cookie(LIVEFYRE_COOKIE_NAME, response.token);

          authLivefyre();

          if (promise) {
            promise.success();
          }

        });


      } else {
        // Already logged in
        authLivefyre();

        if (promise) {
          promise.success();
        }
      }
    };

    /**
     * @function authLivefyre
     * Fulfills two roles: set a cookie with the authorization token
     * returned by loginLivefyre and executes auth.authenticate to 
     * log the user in to Livefyre
     */
    var authLivefyre = function () {
      if($.cookie(LIVEFYRE_COOKIE_NAME)) {
        try {
          auth.authenticate({
            livefyre: $.cookie(LIVEFYRE_COOKIE_NAME)
          });
        } catch(e) {
          error(e);
        }
      }
    };

    /**
     * @object authDelegateLivefyre
     * This object contains the four authorization methods needed by Livefyre
     * These are documented in Livefyre documentation:
     * @link http://answers.livefyre.com/developers/identity-integration/
     * @todo viewProfile is currently using the editProfile Gigya event. Must find the proper
     * event for public facing profiles
     */
    var authDelegateLivefyre = {
        login: function(errback) {
          if(USER) {
            // Already logged in -- generate Livefyre token to sync login state
            loginLivefyre(errback);
          } else {
            gigya.accounts.showScreenSet({
              screenSet: GIGYA_SETTINGS.screens.loginScreen
            });
          }
          errback(null);
        },

        logout: function(errback) {
          gigya.accounts.logout();
          if($.cookie(LIVEFYRE_COOKIE_NAME)) {
            // Only if currently logged into Livefyre
            $.removeCookie(LIVEFYRE_COOKIE_NAME);
          }
          errback(null);
        },

        viewProfile: function(user) {
          gigya.accounts.showScreenSet({
            screenSet: GIGYA_SETTINGS.screens.profileScreen
          });
        },

        editProfile: function(user) {
          gigya.accounts.showScreenSet({
            screenSet: GIGYA_SETTINGS.screens.profileScreen
          });
        }
    };

    /**
     * Now, let's send all authentication components to Livefyre
     */
    auth.delegate(authDelegateLivefyre);

    // Bind to Gigya login/logout global events
    gigya.accounts.addEventHandlers({
      onLogin: onLogin,
      onLogout: onLogout
    });


    // Query user state and render initial UI
    gigya.accounts.getAccountInfo({
      callback: function(response) {
        USER = response.errorCode === 0 ? response : undefined;
        $(document).ready(onUserStateChange);
      }
    });

    $(document).ready(function() {
      // Bind to login/logout links
      /**
       * These two functions would be replaced by your website's login/logout methods in
       * your global navigation.
       */
      loginBTN$.on("click", function() {
        Livefyre.require(['auth'], function(auth) {
          auth.login();
        });
        return false;
      });


      logoutBTN$.on("click", function() {
        Livefyre.require(['auth'], function(auth) {
          auth.logout();
        });
        return false;
      });

    });
  });
}(this, jQuery, Livefyre, gigya));
